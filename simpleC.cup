import java_cup.runtime.*;

parser code  {: 
  public void report_error(String message, Object info) {
    StringBuffer m = new StringBuffer("Error ");

    if (info instanceof java_cup.runtime.Symbol) 
      m.append( "("+info.toString()+")" );
     
    m.append(" : "+message);
   
    System.out.println(m);
  }
   
  public void report_fatal_error(String message, Object info) {
    report_error(message, info);
    throw new RuntimeException("Fatal Syntax Error");
  }
:};

terminal INT, DOUBLE, FOR, RETURN, VOID;
terminal LPAREN, RPAREN, LBRACE, RBRACE, LBRACK, RBRACK, SEMICOLON, COMMA, DOT;
terminal ASSGN, LT, PLUSPLUS, PLUS, MINUS, DIV, STAR;
terminal java.lang.Number INTEGER_LITERAL;
terminal java.lang.Number FLOATING_POINT_LITERAL;
terminal java.lang.String IDENTIFIER;
terminal AUTO, BREAK, CASE, CHAR, CONST, CONTINUE, DEFAULT;
terminal DO, ELSE, ENUM, EXTERN, FLOAT, GOTO, IF, INLINE;
terminal LONG, REGISTER, RESTRICT, SHORT, SIGNED, SIZEOF;
terminal STATIC, STRUCT, SWITCH, TYPEDEF, UNION, UNSIGNED;
terminal VOLATILE, WHILE, _BOOL, _COMPLEX, _IMAGINARY;
terminal INDIR_SEL, DECREMENT, AMPER, BIT_COMPL, NOT, MOD;
terminal LSHIFT, RSHIFT, GT, LTEQ, GTEQ, EQUAL, NOTEQ, BIT_XOR, BIT_OR;
terminal AND, OR, QMARK, COLON, ELLIPSIS, MULT_ASSGN, DIV_ASSGN, MOD_ASSGN;
terminal ADD_ASSGN, SUB_ASSGN, LSHIFT_ASSGN, RSHIFT_ASSGN, BITAND_ASSGN;
terminal BITXOR_ASSGN, BITOR_ASSGN;
non terminal fake;
fake ::= INT;
